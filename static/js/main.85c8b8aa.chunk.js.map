{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","expandToggle","deleteClick","delete","t0","console","log","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","transform","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","formChange","e","defineProperty","target","formSubmit","_this$state","emailRe","phoneRe","newContact","preventDefault","test","abrupt","post","history","push","_this$state2","onSubmit","layout_TextInputGroup","EditContact","updatedContact","match","params","put","Header","branding","href","About","NotFound","Test","fetch","then","response","json","jsonData","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85c8b8aa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        ),\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    },\n  };\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  // static propTypes = {\n  //   name: PropTypes.string.isRequired,\n  //   email: PropTypes.string.isRequired,\n  //   phone: PropTypes.string.isRequired\n  // }\n\n  state = {\n    showContactInfo: false,\n  };\n\n  // Using arrow func for lexical this\n  expandToggle = () => {\n    // Setting it to !showContact info for toggle\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  deleteClick = async (id, dispatch) => {\n    // Don't need to do anything with the response jsonplaceholder sends\n    // to a delete request. Would likely use confirmation with regular api\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    } catch (e) {\n      console.log(\n        'New users arent added to JSONPlaceholder. Deleting from DOM.',\n        e\n      );\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={this.expandToggle}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.deleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem',\n                      transform: 'scale(.8)',\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  // Don't need constructor for just state\n  // constructor() {\n  //   super();\n  //   this.state = {\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n/* eslint-disable */\n// Destructuring props obj being passed in for better formatting below\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error,\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n/* eslint-enable */\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text',\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  /* eslint-disable */\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n  };\n\n  formChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  formSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    const nameRe = /^[a-z A-Z]{2,20}$/;\n    const emailRe = /^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_.-]+)\\.([a-zA-z]{2,5})$/;\n    const phoneRe = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\n    if (!nameRe.test(name)) {\n      this.setState({\n        errors: {\n          name: 'Name must be between 2 and 20 characters.',\n        },\n      });\n      return;\n    }\n    if (!emailRe.test(email)) {\n      this.setState({\n        errors: {\n          email: 'Enter a valid email address.',\n        },\n      });\n      return;\n    }\n    if (!phoneRe.test(phone)) {\n      this.setState({\n        errors: {\n          phone: 'Enter a valid phone number.',\n        },\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone,\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n\n    dispatch({\n      type: 'ADD_CONTACT',\n      payload: res.data,\n    });\n\n    // Clear input fields and errors\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n    });\n\n    // Redirect to home\n    this.props.history.push('/');\n  };\n  /* eslint-enable */\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.formSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.formChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email address\"\n                    value={email}\n                    onChange={this.formChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone number\"\n                    value={phone}\n                    onChange={this.formChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  /* eslint-disable */\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n    });\n  }\n\n  formChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  formSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    const nameRe = /^[a-z A-Z]{2,20}$/;\n    const emailRe = /^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_.-]+)\\.([a-zA-z]{2,5})$/;\n    const phoneRe = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\n    if (!nameRe.test(name)) {\n      this.setState({\n        errors: {\n          name: 'Name must be between 2 and 20 characters.',\n        },\n      });\n      return;\n    }\n    if (!emailRe.test(email)) {\n      this.setState({\n        errors: {\n          email: 'Enter a valid email address.',\n        },\n      });\n      return;\n    }\n    if (!phoneRe.test(phone)) {\n      this.setState({\n        errors: {\n          phone: 'Enter a valid phone number.',\n        },\n      });\n      return;\n    }\n\n    const updatedContact = {\n      name,\n      email,\n      phone,\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updatedContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n    // Clear input fields and errors\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n    });\n\n    // Redirect to home\n    this.props.history.push('/');\n  };\n  /* eslint-enable */\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.formSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.formChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email address\"\n                    value={email}\n                    onChange={this.formChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone number\"\n                    value={phone}\n                    onChange={this.formChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home mr-1\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus mr-1\" />\n                Add Contact\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question mr-1\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'Contact_Manager',\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\n\n// const headingStyle = {\n//   color: 'blue ',\n//   fontSize: '50px'\n// };\n\nexport default Header;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist :(</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\nexport class Test extends Component {\n  state = {\n    name: '',\n    email: '',\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users/2')\n      .then(response => response.json())\n      .then(jsonData =>\n        this.setState({\n          name: jsonData.name,\n          email: jsonData.email,\n        })\n      );\n  }\n  // Being deprecated?\n  // componentWillMount() {\n  //   console.log('componentWillMount!');\n  // }\n\n  // componentDidUpdate() {\n  //   console.log('componendDidUpdate!!');\n  // }\n  // Being deprecated?\n  // componentWillUpdate() {\n  //   console.log('componentWillUpdate!');\n  // }\n\n  // Being deprecated?\n  // componentWillReceiveProps(nextProps, nextState) {\n  //   console.log('componentWillReceiveProps:', nextProps, nextState);\n  // }\n\n  render() {\n    const { name, email } = this.state;\n    return (\n      <div>\n        <h1 className=\"display-4\">Test Component</h1>\n        <p>Getting data from JSONplaceholder</p>\n        <p>name: {name}</p>\n        <p>email: {email}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/add\" component={AddContact} />\n                <Route exact path=\"/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}